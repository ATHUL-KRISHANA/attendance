
def generate_excel(attendance_list, all_dates, search, selected_month, status_type):
    sheet_name = "Attendance" if status_type != "placed_resigned" else "Placed & Resigned"
    filename = f"attendance_{selected_month}.xlsx" if status_type != "placed_resigned" else f"placed_resigned_{selected_month}.xlsx"

    data = []
    headers = ['No.', 'Student', 'Stack'] + [date.strftime('%d-%m-%Y') for date in all_dates] + ['Total Present', 'Total Absent']

    for idx, attendance in enumerate(attendance_list, start=1):
        row = [idx, f"{attendance['student'].first_name} {attendance['student'].last_name}", attendance['stack']]
        row.extend(attendance['dates'])
        row.append(attendance['total_present'])
        row.append(attendance['total_absent'])
        data.append(row)

    df = pd.DataFrame(data, columns=headers)

    response = HttpResponse(content_type='application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')
    response['Content-Disposition'] = f'attachment; filename={filename}'
    
    with pd.ExcelWriter(response, engine='openpyxl') as writer:
        df.to_excel(writer, index=False, sheet_name=sheet_name)

    return response


#----

def sheet(request):
    selected_month = request.GET.get('month', datetime.now().strftime('%Y-%m'))
    search = request.GET.get('search', '')
    download = request.GET.get('download', '')
    status_type = request.GET.get('status_type', '')

    try:
        start_date = datetime.strptime(selected_month, "%Y-%m")
    except ValueError:
        start_date = datetime.now().replace(day=1)
    end_date = (start_date + timedelta(days=32)).replace(day=1) - timedelta(days=1)

    attendance_records = AttendanceRecord.objects.filter(date__range=(start_date, end_date))

    if status_type == 'placed_resigned':
        attendance_records = attendance_records.filter(student__status__in=['Placed', 'Resigned'])
    else:
        attendance_records = attendance_records.exclude(student__status__in=['Placed', 'Resigned'])

    if search:
        attendance_records = attendance_records.filter(student__first_name__icontains=search)

    all_dates = sorted(set(attendance_records.values_list('date', flat=True)))

    attendance_list = []
    for student in attendance_records.values('student').distinct():
        student_attendance = attendance_records.filter(student=student['student'])
        statuses = []
        total_present = 0
        total_absent = 0

        for date in all_dates:
            record = student_attendance.filter(date=date).first()
            if record:
                statuses.append(record.status)
                if record.status == "Present":
                    total_present += 1
                elif record.status == "Absent":
                    total_absent += 1
            else:
                statuses.append("N/A")

        attendance_list.append({
            "student": student_attendance.first().student,
            "stack": student_attendance.first().student.stack.stack_name,
            "dates": statuses,
            "total_present": total_present,
            "total_absent": total_absent,
        })

    if download == 'excel':
        return generate_excel(attendance_list, all_dates, search, selected_month, status_type)

    available_months = AttendanceRecord.objects.dates('date', 'month')

    context = {
        "attendance_list": attendance_list,
        "all_dates": all_dates,
        "available_months": available_months,
        "selected_month": selected_month,
        "search": search,
        "status_type": status_type,
    }
    return render(request, "sheet.html", context)






{% extends 'base.html' %}

{% block content %}
<div class="container my-5 p-5 shadow-lg" style="border-radius:10px;">

    <div class="d-flex justify-content-between align-items-center">
        <h2>Attendance Sheet</h2>
        <div>
            <a href="{% url 'sheet' %}?download=excel&month={{ selected_month }}{% if search %}&search={{ search }}{% endif %}&status_type={{ status_type }}" class="btn btn-success">Download</a>
            <a href="{% url 'sheet' %}?month={{ selected_month }}{% if search %}&search={{ search }}{% endif %}" class="btn btn-primary {% if not status_type %}active{% endif %}">Main Sheet</a>
            <a href="{% url 'sheet' %}?month={{ selected_month }}&status_type=placed_resigned{% if search %}&search={{ search }}{% endif %}" class="btn btn-secondary {% if status_type == 'placed_resigned' %}active{% endif %}">Placed & Resigned</a>
        </div>
    </div>

    <form method="GET" action="{% url 'sheet' %}" class="mt-3">
        <div class="input-group mb-3">
            <label for="month-select" class="form-label me-3">Select Month:</label>
            <select id="month-select" name="month" class="form-select">
                {% for month_date in available_months %}
                <option value="{{ month_date|date:'Y-m' }}" {% if month_date|date:'Y-m' == selected_month %}selected{% endif %}>
                    {{ month_date|date:'F Y' }}
                </option>
                {% endfor %}
            </select>
            <input type="text" name="search" class="form-control ms-3" placeholder="Search by Student Name" value="{% if search %}{{ search }}{% endif %}">
            <input type="hidden" name="status_type" value="{{ status_type }}">
            <button class="btn btn-outline-primary ms-3" type="submit">Filter</button>
        </div>
    </form>

    {% if attendance_list %}
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Student</th>
                    <th>Stack</th>
                    {% for date in all_dates %}
                    <th>{{ date|date:"d M" }}</th>
                    {% endfor %}
                    <th>Total Present</th>
                    <th>Total Absent</th>
                </tr>
            </thead>
            <tbody>
                {% for attendance in attendance_list %}
                    <tr>
                        <td>{{ forloop.counter }}</td>
                        <td>{{ attendance.student.first_name }} {{ attendance.student.last_name }}</td>
                        <td>{{ attendance.stack }}</td>
                        {% for status in attendance.dates %}
                        <td class="{% if status == 'Absent' %}text-danger{% elif status == 'Present' %}text-success{% endif %}">
                            {{ status }}
                        </td>
                        {% endfor %}
                        <td>{{ attendance.total_present }}</td>
                        <td>{{ attendance.total_absent }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% else %}
    <p class="text-center mt-4">No attendance data available for the selected month or search query.</p>
    {% endif %}
</div>
{% endblock %}


{% comment %} {% extends 'base.html' %}

{% block content %}
<div class="container my-5 p-5 shadow-lg" style="border-radius:10px;">

    <div class="d-flex justify-content-between align-items-center">
        <h2>Attendance Sheet</h2>
        <a href="{% url 'sheet' %}?download=excel&month={{ selected_month }}{% if search %}&search={{ search }}{% endif %}" class="btn btn-success mt-4">Download</a>
    </div>
    
    <form method="GET" action="{% url 'sheet' %}" class="mt-3">
        <div class="input-group mb-3">
            <label for="month-select" class="form-label me-3">Select Month:</label>
            <select id="month-select" name="month" class="form-select">
                {% for month_date in available_months %}
                <option value="{{ month_date|date:'Y-m' }}" {% if month_date|date:'Y-m' == selected_month %}selected{% endif %}>
                    {{ month_date|date:'F Y' }}
                </option>
                {% endfor %}
            </select>
            <input type="text" name="search" class="form-control ms-3" placeholder="Search by Student Name" value="{% if search %}{{ search }}{% endif %}">
            <button class="btn btn-outline-primary ms-3" type="submit">Filter</button>
        </div>
    </form>

    {% if attendance_list %}
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Student</th>
                    <th>Stack</th>
                    {% for date in all_dates %}
                    <th>{{ date|date:"d M" }}</th>
                    {% endfor %}
                    <th>Total Present</th>
                    <th>Total Absent</th>
                </tr>
            </thead>
            <tbody>
                {% for attendance in attendance_list %}
                    <tr>
                        <td>{{ forloop.counter }}</td>
                        <td>{{ attendance.student.first_name }} {{ attendance.student.last_name }}</td>
                        <td>{{ attendance.stack }}</td>
                        {% for status in attendance.dates %}
                        <td class="{% if status == 'Absent' %}text-danger{% elif status == 'Present' %}text-success{% endif %}">
                            {{ status }}
                        </td>
                        {% endfor %}
                        <td>{{ attendance.total_present }}</td>
                        <td>{{ attendance.total_absent }}</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
    {% else %}
    <p class="text-center mt-4">No attendance data available for the selected month or search query.</p>
    {% endif %}
</div>
{% endblock %}  {% endcomment %}

